{"version":3,"sources":["PMenu.js","reportWebVitals.js","index.js"],"names":["menuList","MenuExampleColoredInverted","state","activeA","handleAClick","e","name","setState","this","Container","style","margin","Segment","inverted","Menu","pointing","secondary","map","c","Item","active","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAIMA,EAAW,CAAC,OAAQ,OAAQ,QAAS,eAEtBC,E,4MACnBC,MAAQ,CAAEC,QAASH,EAAS,I,EAE5BI,aAAe,SAACC,EAAD,OAAMC,EAAN,EAAMA,KAAN,OAAiB,EAAKC,SAAS,CAAEJ,QAASG,K,4CAEzD,WAAU,IAAD,OACCH,EAAYK,KAAKN,MAAjBC,QAER,OACE,cAACM,EAAA,EAAD,CAAWC,MAAO,CAAEC,OAAQ,IAA5B,SACE,cAACC,EAAA,EAAD,CAASC,UAAQ,EAAjB,SACE,cAACC,EAAA,EAAD,CAAMD,UAAQ,EAACE,UAAQ,EAACC,WAAS,EAAjC,SACGhB,EAASiB,KAAI,SAACC,GAAD,OACZ,cAACJ,EAAA,EAAKK,KAAN,CAEEb,KAAMY,EACNE,OAAQjB,IAAYe,EACpBG,QAAS,EAAKjB,cAHTc,gB,GAdmCI,aCMzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.719c0ffa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Segment, Menu } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst menuList = [\"home\", \"font\", \"image\", \"instruction\"];\n\nexport default class MenuExampleColoredInverted extends Component {\n  state = { activeA: menuList[0] };\n\n  handleAClick = (e, { name }) => this.setState({ activeA: name });\n\n  render() {\n    const { activeA } = this.state;\n\n    return (\n      <Container style={{ margin: 20 }}>\n        <Segment inverted>\n          <Menu inverted pointing secondary>\n            {menuList.map((c) => (\n              <Menu.Item\n                key={c}\n                name={c}\n                active={activeA === c}\n                onClick={this.handleAClick}\n              />\n            ))}\n          </Menu>\n        </Segment>\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport PMenu from \"./PMenu\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// const styleLink = document.createElement(\"link\");\n// styleLink.rel = \"stylesheet\";\n// styleLink.href =\n//   \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\n// document.head.appendChild(styleLink);\n\nReactDOM.render(\n  <React.StrictMode>\n    <PMenu />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}